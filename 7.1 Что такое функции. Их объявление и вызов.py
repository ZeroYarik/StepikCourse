# def send_mail(from_name, old):
#     text = f"qwerty {from_name} {old}"
#     print(text)
#
#
# send_mail("Иван Иванович", 7)

# Задайте функцию, которая не принимает никаких аргументов и просто выводит на экран строку:
# It's my first function
# В конце программы вызовите эту функцию.
# def show_text():
#     print("It's my first function")
# show_text()

# Запишите функцию без аргументов, которая считывает с клавиатуры имя и фамилию, записанные в одну строку через пробел, и выводит на экран сообщение (без кавычек):
# "Уважаемый, <имя> <фамилия>! Вы верно выполнили это задание!"
# В конце программы вызовите эту функцию.
# def show_message():
#     name_lsname = f"Уважаемый, {input()}! Вы верно выполнили это задание!"
#     print(name_lsname)
# show_message()

# Объявите функцию, которая имеет один параметр - вес предмета и выводит на экран сообщение (без кавычек):
# "Предмет имеет вес: x кг."
# где x - переданное значение функции. После объявления функции прочитайте (с помощью функции input) вещественное число и вызовите функцию с этим значением.
# def show_text(weight):
#     text = f"Предмет имеет вес: {weight} кг."
#     print(text)
# show_text(float(input()))

# Объявите функцию, которая принимает список, находит максимальное, минимальное и сумму значений этого списка и выводит результат в виде строки (без кавычек):
# "Min = v_min, max = v_max, sum = v_sum"
# где v_min, v_max, v_sum - вычисленные значения минимального, максимального и суммы значений списка.
# После объявления функции прочитайте (с помощью функции input) список целых чисел, записанных в одну строку через пробел, и вызовите функцию с этим списком.
# def find_nums(largest, smallest, average):
#     text = f"Min = {min(nums)}, max = {max(nums)}, sum = {sum(nums)}"
#     print(text)
# nums = list(map(int, input().split()))
# find_nums(nums, nums, nums)

# Объявите функцию с двумя параметрами width и height (ширина и высота прямоугольника), которая выводит сообщение (без кавычек):
# "Периметр прямоугольника, равен x"
# где x - вычисленный периметр прямоугольника.
# После объявления функции прочитайте (с помощью функции input) два целых числа, записанных в одну строку через пробел, и вызовите функцию с этими значениями.
# def find_square(width, height):
#     text = f"Периметр прямоугольника, равен {(nums[0] * 2) + (nums[1] * 2)} "
#     print(text)
# nums = list(map(int, input().split()))
# find_square(nums[0], nums[1])

#  Напишите функцию, которая проверяет корректность переданного ей email-адреса в виде строки.
#  Будем полагать, что адрес верен, если он обязательно содержит символы '@' и '.',
#  а все остальные символы могут принимать значения: 'a-z', 'A-Z', '0-9' и '_'.
#  Если email верен, то функция выводит ДА, иначе - НЕТ.
# После объявления функции прочитайте (с помощью функции input) строку с email-адресом и вызовите функцию с этим аргументом.
# import re
# from email.utils import parseaddr
# def check_mail(email):
#     email_regex = re.compile((r"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$)"))
#
#     if email_regex.fullmatch(mail):
#         print("ДА")
#     else:
#         print("НЕТ")
#
#
# mail = input()
# check_mail(mail)

