# a = {x ** 2 for x in range(1, 5)} # генератор множеств
# b = {x: x ** 2 for x in range(1, 5)} # генератор словарей
# print(b)
# d = [1, 2, '1', '2', -4, 3, 4]
# a = {int(x) for x in d} # преобразование списка в множество через генератор множеств
# m = {"неудовл.": 2, "удовл.": 3, "хорошо": '3', "отлично": '5'}
# i = {key.upper(): int(value) for key, value in m.items()}
# d = [1, 2, '1', '2', -4, 3, 4]
# a = {int(x) for x in d if int(x) > 0}
# print(a)

# водится строка со списком оценок, например:
# 2 неудовлетворительно удовлетворительно хорошо отлично
# Первая цифра - это числовое значение первой оценки. Остальные оценки имеют возрастающие на 1 числа.
# С помощью генератора словарей необходимо сформировать словарь d, где ключами будут выступать числа, а значениями - слова.
# Например:
# d = {2: 'неудовлетворительно', 3: 'удовлетворительно', 4: 'хорошо', 5: 'отлично'}
# Вывести на экран значение сформированного словаря с ключом 4.
# ----------

# а автомойку в течение квартала заезжали машины. Их гос. номера фиксировались в журнале, следующим образом (пример):
# Е220СК
# А120МВ
# В101АА
# Е220СК
# А120МВ
# На основе такого списка через генератор множеств сформировать список уникальных машин. На экран вывести число уникальных машин.
# P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
# import sys
#
# # считывание списка из входного потока
# lst_in = list(map(str.strip, sys.stdin.readlines()))
#
# # здесь продолжайте программу (используйте список lst_in)
# l = {x for x in lst_in}
# print(len(l))

# Вводится текст в одну строчку со словами через пробел. С помощью генератора множеств сформировать множество из
# уникальных слов без учета регистра и длина которых не менее трех символов. Вывести на экран размер этого множества.
# text = set(input().split())
# s = {x.lower() for x in text if len(x) > 2}
# print(len(s))

# Вводится текст в одну строчку со словами через пробел. Используя генераторы множеств и словарей, сформировать словарь в формате:
# {слово_1: количество_1, слово_2: количество_2, ..., слово_N: количество_N}
# То есть, ключами выступают уникальные слова (без учета регистра),
# а значениями - число их встречаемости в тексте. На экран вывести значение словаря для слова (союза) 'и'. Если такого ключа нет, то вывести 0.
# list_in = list(input().lower().split()) # Принимаю строку в формате списка и привожу все к нижнему регистру .lower()
# set_in = set(list_in)                   # Преобразовываю в формат множества (set)
# # Преобразовываю в dict вложенным циклом последним мы будет выбирать значения из set так как по индексу нельзя обратится к множеству.
# # Далее будет за значения ключа брать значение полученные из множества с помощью list_in.count(val) получать сколько
# # раз будет встречаться переданное значение.
# dict_in = {val: list_in.count(val) for i in range(0, len(set_in)) for val in set_in}
# print(dict_in.get('и', 0))

# Вводится список книг книжного магазина в формате:
# <автор 1>:<название 1>
# <автор N>:<название N>
# Авторы с названиями могут повторяться. Необходимо, используя генераторы, сформировать словарь с именем d вида:
# {'автор 1': {'название 1', 'название 2', ..., 'название M'}, ..., 'автор K': {'название 1', 'название 2', ..., 'название S'}}
# То есть, ключами выступают уникальные авторы, а значениями - множества с уникальными названиями книг соответствующего автора.
# На экран ничего выводить не нужно, только сформировать словарь обязательно с именем d - он, далее будет проверяться в тестах!
# P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
# НЕ РЕШИЛ!!!!
# lst_in = ['Пушкин: Сказака о рыбаке и рыбке',
#
# 'Есенин: Письмо к женщине',
#
# 'Тургенев: Муму',
#
# 'Пушкин: Евгений Онегин',
#
# 'Есенин: Русь']
#
# z = [key.split(':') for key in lst_in]
# d = {author[0]: {book[1].lstrip() for book in z if book[0] == author[0]} for author in z}
# print(d)