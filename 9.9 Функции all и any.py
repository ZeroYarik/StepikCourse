"""На вход программе подаются целые числа, записанные через пробел.
Необходимо их прочитать и определить, являются ли все эти числа четными.
Вывести True, если это так и False в противном случае.
Задачу реализовать с использованием одной из функций: any или all."""
# true_nums = all(map(lambda x: int(x) % 2 == 0, input().split()))
# print(true_nums)

"""На вход программе подаются вещественные числа, записанные через пробел.
 Необходимо их прочитать и определить, есть ли среди них хотя бы одно отрицательное. 
 Вывести True, если это так и False в противном случае.
Задачу реализовать с использованием одной из функций: any или all."""
# nums = any(map(lambda x: float(x) < 0, input().split()))
# print(nums)

"""В программе объявите функцию с именем is_string следующей сигнатуры:
def is_string(lst): ...
Функции передается (через параметр lst) коллекция (список, кортеж, множество). Функция должна возвращать True, 
если все элементы коллекции lst строки и False в противном случае.
Вызывать функцию не нужно, только объявить. Также ничего не нужно выводить на экран.
 Задачу реализовать с использованием одной из функций: any или all."""
# def is_string(lst):
#     res = all(map(lambda x: isinstance(x, str), lst))
#     return res

"""На вход программе подаются оценки студента, записанные через пробел. 
Необходимо их прочитать и определить, имеется ли в этом списке хотя бы одна оценка ниже тройки. 
Если это так, то вывести на экран строку "отчислен", иначе - "учится".
Задачу реализовать с использованием одной из функций: any или all."""
# def get_mark():
#     if any(map(lambda x: int(x) < 3, input().split())):
#         return "отчислен"
#     else:
#         return 'учится'
#
#
# print(get_mark())

"""На вход программе подается текущее игровое поле для игры "Крестики-нолики" в виде следующей таблицы (списка строк):
# x o
x # x
o o #
Здесь # - свободная клетка. Эти данные данные уже читаются в программе (скрыто) представлены в виде двумерного списка 
(пример):
[ ['#', 'x', 'o'], ['x', '#', 'x'], ['o', 'o', '#'] ]
Объявите в программе функцию с именем is_free сигнатуры:
def is_free(lst): ...
На этой функции передается игровое поле в виде двумерного (вложенного) списка. Данная функция должна возвращать True,
 если есть хотя бы одна свободная клетка и False в противном случае.
Вызывать функцию не нужно, только определить. Также ничего не нужно выводить на экран. 
Задачу реализовать с использованием одной из функций: any или all."""
# def is_free(lst):
#     return any(j for i in lst for j in i if j == '#')
#
#
# lst = [['x', 'x', 'o'],['x', '#', 'x'],['o', 'o', 'x']]
# print(is_free(lst))

# def is_free(lst):
#     flat_list = []
#     for i in lst:
#         flat_list.extend(i)
#     return any(map(lambda x: x == "#", flat_list))
#
# lst = [['o', 'x', 'o'], ['x', '#', 'x'], ['o', 'o', 'o']]
# print(is_free(lst))