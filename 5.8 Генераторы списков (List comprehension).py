# a = [1 + 2 for i in range(10)]
# print(a)

# a = [x % 4 for x in range(10)]
# print(a)

# num = input("Enter a number: ")
#
# a = [int(i) for i in num.split()]
# print(a)

#Вводятся вещественные числа в строку через пробел.
# Необходимо на их основе сформировать список lst с помощью list comprehension (генератора списков) из модулей
# введенных чисел (в списке должны храниться именно числа, а не строки).
# Результат вывести на экран в виде списка командой:
#print(lst)
#
# nums = input()
# a = [abs(float(i)) for i in nums.split()]
# print(a)

#  Вводится семизначное целое положительное число. С помощью list comprehension сформировать список lst,
#  содержащий цифры этого числа (в списке должны быть записаны числа, а не строки).
#  Результат вывести на экран список командой:
# num = input()
# a = [int(i) for i in num]
# print(a)

# Вводится натуральное число N. С помощью list comprehension сформировать двумерный список размером N x N, состоящий
# из нулей, а по главной диагонали - единицы. (Главная диагональ - это элементы, идущие по диагонали от верхнего левого
# угла матрицы до ее нижнего правого угла). Результат вывести в виде таблицы чисел как показано в примере ниже.
# num = int(input())
# count = 1
# c = [count]
# a = [[0 * i for i in range(num)] for j in range(num)]
# print(*a, sep='\n')

# Вводятся названия городов в строку через пробел. Необходимо сформировать список с помощью list comprehension,
# содержащий названия длиной более пяти символов. Результат вывести в строчку через пробел.
# cities = list(map(str, input().split()))
# a = [city for city in cities if len(city) > 5]
# print(*a)

# Вводится натуральное число n.
# Необходимо сформировать список с помощью list comprehension, состоящий из делителей числа n (включая и само число n).
# Результат вывести на экран в одну строку через пробел.
# num = int(input())
# a = [i for i in range(1,num) if num % i == 0]
# print(*a, num)

# Вводится натуральное число N. Необходимо сгенерировать вложенный список с помощью list comprehension, размером N x N,
# где первая строка содержала бы все нули, вторая - все единицы, третья - все двойки и так до N-й строки.
# Результат вывести в виде таблицы чисел как показано в примере ниже.
# nums = int(input())
#
# a = [[j for i in range(nums)] for j in range(nums)]
# for i in a:
#     print(i)

#  Вводится список вещественных чисел. С помощью list comprehension сформировать список, состоящий из элементов
#  введенного списка, имеющих четные индексы (то есть, выбрать все элементы с четными индексами).
#  Результат вывести на экран в одну строку через пробел.
# num = list(map(float, input().split()))
# a = [v for i,v in enumerate(num) if i % 2 == 0]
# print(*a)

# Вводятся два списка целых чисел одинаковой длины каждый с новой строки.
# С помощью list comprehension сформировать третий список, состоящий из суммы соответствующих пар чисел введенных
# списков. Результат вывести на экран в одну строку через пробел.
# nums_1 = list(map(int, input().split()))
# nums_2 = list(map(int, input().split()))
#
# a = [nums_1[i] + nums_2[i] for i in range(len(nums_1))]
# print(*a)

# Вводится список в формате:
# <город 1> <численность населения 1> <город 2> <численность населения 2> ... <город N> <численность населения N>
# Необходимо с помощью list comprehension сформировать список lst, содержащий вложенные списки из пар:
# <город> <численность населения>
# Численность населения - целое число в тыс. человек. Вывести результат на экран в виде списка командой:

# cities = list(map(str, input().split()))
# a = [[cities[i], int(cities[i+1])] for i in range(0, len(cities), 2)]
# print(a)

# n = [i for i in input().split()]
#
# year = [int(n[i]) for i in range(1, len(n), 2)]
# town = [str(n[i]) for i in range(0, len(n), 2)]
# res = []
# for i in range(len(year)):
#     res.append([town[i], int(year[i])])
# print(res)
