# print("Start cycle")
#
# i = 0
# while True:
#     i += 1
#     break
# print("Stop cycle")

# d = [1, 5, 3, 6, 0, -4]
#
# flFInd = False
# i = 0
# while i < len(d):
#     print(i)
#     flFind = d[i] % 2 == 0
#     if flFind:
#         break
#
#     i += 1
#
# print(flFInd)

# s = 0
# d = 1
#
# while d != 0:
#     d = int(input("Input a number: "))
#     if d % 2 == 0:
#         continue
#
#     s += d
#     print("s = " + str(s))

# S = 0
# i = -10
#
# while i < 0:
#     if i == 0:
#         break
#     S += 1/i
#     i += 1
# else:
#     print("sum is correct")
#
# print(S)

# Имеется одномерный список длиной 10 элементов, состоящий из нулей:
# p = [0] * 10
# На каждой итерации цикла пользователь вводит целое число - индекс элемента списка p, по которому записывается значение 1
# , если ее там еще нет. Если же 1 уже проставлена, то список не менять и снова запросить у пользователя очередное число.
# Необходимо расставить так пять единиц в список. (После этого цикл прерывается).
# Программу реализовать с помощью цикла while и с использованием оператора continue, когда 1 не может быть добавлена в
# список. Результат вывести на экран в виде последовательности чисел, записанных через пробел.
# p = [0] * 10
# i = 0
#
# while i < 5:
#     x = int(input())
#     if p[x] != 1:
#         p[x] = 1
#         i += 1
#     continue
#
# print(*p)

# На каждой итерации цикла вводится целое число. Необходимо подсчитать произведение только положительных чисел, до тех
# пор, пока не будет введено значение 0. Реализовать пропуск вычислений с помощью оператора continue, а также
# использовать цикл while. Результат произведения вывести на экран.
# x = 1
# d = 1
# while d != 0:
#     d = int(input())
#     if d > 0:
#         x *= d
#     continue
# print(x)

# Вводится список названий городов в одну строчку через пробел. Определить, что в этом списке все города имеют
# длину более 5 символов. Реализовать программу с использованием цикла while и оператора break.
# Вывести ДА, если условие выполняется и НЕТ - в противном случае.
# cities = list(input().split())
# s = 0
#
# while len(cities[s]) < 5:
#     print("НЕТ")
#     s += 1
#     break
# len(cities[s]) > 5:
# print("ДА")

# Вводится список имен студентов в одну строчку через пробел. Определить, что хотя бы одно имя в этом списке начинается
# и заканчивается на ту же самую букву (без учета регистра). Реализовать программу с использованием цикла while и
#     оператора break. Вывести ДА, если условие выполняется и НЕТ - в противном случае.

# names = input().lower().split()
# s = 0
#
# while s < len(names):
#     if names[s][0] == names[s][-1]:
#         print("ДА")
#         break
#     s += 1
# else:
#     print("НЕТ")

#  Вводится натуральное число n (то есть, целое положительное). В цикле перебрать все целые числа в интервале [1; n]
#  и сформировать список из чисел, кратных 3 и 5 одновременно. Вывести полученную последовательность чисел в виде строки
#  через пробел, если значение n меньше 100. Иначе вывести на экран сообщение "слишком большое значение n"
#  (без кавычек). Использовать в программе оператор else после цикла while.
# number = int(input())
# iter = 0
# while iter < number and number < 100:
#     iter += 1
#     if iter % 3 == 0 and iter % 5 == 0:
#         print(iter, end=" ")
# else:
#     if number >= 100:
#         print("слишком большое значение n")

# Вводится натуральное число n. Вывести первое найденное натуральное число (то есть, перебирать числа, начиная с 1),
# квадрат которого больше значения n. Реализовать программу с использованием цикла while.
# number = int(input())
# iter = 0
# while iter ** 2 <= number:
#     iter += 1
# print(iter)

# my_number = int(input())
# iter = 0
# while iter <= my_number:
#     iter += 1
#     if (iter * iter) > my_number:
#         print(iter)
#         break

# (На использование цикла while). Начав тренировки, лыжник в первый день пробежал 10 км.
# Каждый следующий день он увеличивал пробег на 10 % от пробега предыдущего дня.
# Определить в какой день он пробежит больше x км (натуральное число x вводится с клавиатуры).
# Результат (искомый день) вывести на экран.
# x = int(input())
# distance = 10
# day = 1
# while distance <= x:
#     distance = distance + (distance * 0.1)
#     day += 1
# print(day)

# (На использование цикла while).
# Вводятся названия книг (каждое с новой строки).
# Удалить из введенного списка все названия, состоящие из двух и более слов (слова в названиях разделяются пробелом).
# Результат вывести на экран в виде строки из оставшихся названий через пробел.
# P. S. Для считывания списка целиком в программе уже записаны начальные строчки
import sys

# # считывание списка из входного потока
# lst_in = list(map(str.strip, sys.stdin.readlines()))
# s = 0
# while s < len(lst_in):
#     if " " in lst_in[s]:
#         lst_in.remove(lst_in[s])
#     else:
#         s += 1
#         continue
# print(*lst_in)

# lst_in = list(map(str.strip, sys.stdin.readlines()))
#
# # здесь продолжайте программу (используйте список lst_in)
# i=1
# while i<len(lst_in):
#     if " "in lst_in[i]:
#         lst_in.remove(lst_in[i])
#     else:
#         i+=1
#         continue
# print(*lst_in)
