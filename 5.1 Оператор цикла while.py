# N = -10
# i = -1
#
# # 1, 3, 5, 7
# while i > N:
#     print(i)
#     i -= 1


# pass_true = "password"
# ps = ""
#
# while ps != pass_true:
#     ps = input("Enter password ")
#
# print("ENter")

# N = 200
# i = 1
#
# while i <= N:
#     if i % 3 == 0:
#         print(i)
#     i += 1

# Вводятся два целых положительных числа n и m, причем, n < m. Вывести в строку через пробел квадраты целых чисел в
# диапазоне [n; m]. Программу реализовать при помощи цикла while.
# n, m = map(int, input().split())
# while n <= m:
#     print(n * n, end=" ")
#     n += 1

# Вводится стоимость одной книги x рублей (вещественное число). Необходимо вывести на экран в строчку через пробел
# стоимости 2, 3, ... 10-ти таких книг с точностью до десятых. Программу реализовать при помощи цикла while.
# price = float(input())
# sum_of = price
# while sum_of < price * 10:
#     sum_of += price
#     print(round(sum_of, 1), end=' ')

# Вводится целое положительное число n. Вычислить и вывести на экран сумму: 1 + 1/2 + 1/3 + ... + 1/n с
# точностью до тысячных (три знака после запятой). Программу реализовать при помощи цикла while.
# n = int(input())
# i = 1
# sum = 0
# while i <= n:
#     sum = sum + 1 / i
#     i += 1
# print(round(sum, 3))

# На каждой итерации цикла пользователь вводит целое число. Цикл продолжается, пока не встретится число 0.
# Необходимо вычислить сумму введенных в цикле чисел и вывести результат на экран=
# goal_is = 0
# number = ""
# sum = 0
# while number != goal_is:
#     number = int(input())
#     sum = sum + number
# print(sum)

# Вводится строка (слаг). Замените в этой строке все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-).
# Результат преобразования строки выведите на экран. Программу реализовать при помощи цикла while.
# String = input()
# while "--" in String:
#     String = String.replace("--", "-")
# print(String)

# Вводится натуральное (то есть, целое положительное) число (от трехзначного и более).
# Найти произведение всех его цифр. Результат вывести на экран. Программу реализовать при помощи цикла while.
# number = input()
# count = 1
# power = 0
# while power != len(number):
#     count *= int(number[power])
#     power += 1
# print(count)

# Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, а каждое последующее равно сумме
# двух предыдущих. Имеем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ... Постройте последовательность
# Фибоначчи длиной n (n вводится с клавиатуры). Результат отобразите в виде строки полученных чисел, записанных через
# пробел. Программу реализовать при помощи цикла while.
# n = int(input())
# i = 0
# sum = [1, 1]
# while i < n - 2:
#     sum.append(sum[i] + sum[i + 1])
#     i += 1
# print(*sum)

# Одноклеточная амеба каждые 3 часа делится на 2 клетки. Определить, сколько клеток будет через n часов
# (n - целое положительное число, вводимое с клавиатуры). Считать, что изначально была одна амеба. Результат вывести на
# # экран. Задачу необходимо решить с использованием цикла while.
# hours = int(input())
# amoeba = 1
# iter = 1
# while iter < hours:
#     if iter % 3 == 0:
#         amoeba *= 2
#     iter += 1
# print(amoeba)

# Гражданин 1 января открыл счет в банке, вложив 1000 руб. Каждый год размер вклада увеличивается на 5% от имеющейся
# суммы. Определить сумму вклада через n лет (n - целое положительное число, вводимое с клавиатуры).
# Результат округлить до сотых и вывести на экран. Программу реализовать при помощи цикла while.
# years = int(input())
# bank_acc = 1000
# iter = 0
# while iter < years:
#     bank_acc = bank_acc + ((bank_acc / 100) * 5)
#     iter += 1
# print(round(bank_acc, 2))

# Вводятся два натуральных четных числа n и m в одну строчку через пробел, причем n < m.
# Напечатать все нечетные числа из интервала [n, m]. Задачу решить без применения условного оператора.
# Результат вывести на экран в виде строки чисел, записанных через пробел. Программу реализовать при помощи цикла while.
# n, m = map(int, input().split())
# while n < m:
#     print(n + 1, end=" ")
#     n += 2

# Составить программу поиска всех трехзначных чисел, которые при делении на 47 дают в остатке 43 и кратны 3.
# Вывести найденные числа в строчку через пробел. Программу реализовать при помощи цикла while.
# number = 100
# while number < 1000:
#     if number % 47 == 43 and number % 3 == 0:
#         print(number, end=" ")
#     number += 1
